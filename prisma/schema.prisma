generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model menu_item {
  id            String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String       @db.VarChar(255)
  description   String?      @db.VarChar(255)
  price         Int
  restaurant_id String       @db.Uuid
  created_at    DateTime     @default(now()) @db.Timestamp(6)
  updated_at    DateTime     @default(now()) @db.Timestamp(6)
  restaurant    restaurant   @relation(fields: [restaurant_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  order_item    order_item[]
}

model order {
  id            String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  total_price   Int
  status        String       @db.VarChar(255)
  user_id       String       @db.Uuid
  restaurant_id String       @db.Uuid
  created_at    DateTime     @default(now()) @db.Timestamp(6)
  updated_at    DateTime     @default(now()) @db.Timestamp(6)
  restaurant    restaurant   @relation(fields: [restaurant_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user          user         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  order_item    order_item[]
}

model order_item {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  quantity     Int
  menu_item_id String    @db.Uuid
  order_id     String    @db.Uuid
  created_at   DateTime  @default(now()) @db.Timestamp(6)
  updated_at   DateTime  @default(now()) @db.Timestamp(6)
  menu_item    menu_item @relation(fields: [menu_item_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  order        order     @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model reservation {
  id               String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  date             DateTime   @db.Date
  time             DateTime   @db.Time(6)
  number_of_people Int
  user_id          String     @db.Uuid
  restaurant_id    String     @db.Uuid
  created_at       DateTime   @default(now()) @db.Timestamp(6)
  updated_at       DateTime   @default(now()) @db.Timestamp(6)
  restaurant       restaurant @relation(fields: [restaurant_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user             user       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model restaurant {
  id            String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description   String?       @db.VarChar(255)
  location      String?       @db.VarChar(255)
  cuisine       String?       @db.VarChar(255)
  opening_hours String?       @db.VarChar(255)
  closing_hours String?       @db.VarChar(255)
  name          String        @db.VarChar(255)
  created_at    DateTime      @default(now()) @db.Timestamp(6)
  updated_at    DateTime      @default(now()) @db.Timestamp(6)
  user_id       String        @db.Uuid
  tenant_id     String        @db.VarChar(255)
  menu_item     menu_item[]
  order         order[]
  reservation   reservation[]
  user          user          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String        @unique @db.VarChar(255)
  firstName   String?       @db.VarChar(255)
  lastName    String?       @db.VarChar(255)
  roq_user_id String        @db.VarChar(255)
  tenant_id   String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  order       order[]
  reservation reservation[]
  restaurant  restaurant[]
}
